apiVersion: batch/v1
kind: Job
metadata:
  name: test-kafka-cli
  annotations:
    test-image: &image solsson/kafka-cli@sha256:9fa3306e9f5d18283d10e01f7c115d8321eedc682f262aff784bd0126e1f2221
    test-change: github.com/solsson/dockerfiles/pull/25
spec:
  backoffLimit: 0
  template:
    metadata:
      annotations:
        kafka-bootstrap: bootstrap.kafka:9092
        admin-zookeeper: zookeeper.kafka:2181
    spec:
      containers:
      - name: list
        # https://microk8s.io/docs/working#working-with-microk8s-registry-add-on
        image: *image
        env:
        - name: BOOTSTRAP
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['kafka-bootstrap']
        command:
        - kafka-topics
        args:
        - --bootstrap-server
        -   $(BOOTSTRAP)
        - --list
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
      - name: script
        image: *image
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: BOOTSTRAP
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['kafka-bootstrap']
        - name: ZOOKEEPER
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['admin-zookeeper']
        - name: PARTITIONS
          value: "3"
        - name: REPLICATION_FACTOR
          value: "1"
        command:
        - /bin/bash
        - -cex
        - |
          echo "List:"
          kafka-topics \
            --bootstrap-server $(BOOTSTRAP) \
            --list
          TESTTOPIC=kafka-cli-test-$(POD_NAME)
          echo "Creating $TESTTOPIC ..."
          kafka-topics \
            --bootstrap-server $(BOOTSTRAP) \
            --create \
            --topic $TESTTOPIC \
            --replication-factor $(REPLICATION_FACTOR) \
            --partitions $(PARTITIONS)
          echo "List:"
          kafka-topics \
            --bootstrap-server $(BOOTSTRAP) \
            --list
          echo "Configure:"
          kafka-topics \
            --zookeeper $(ZOOKEEPER) \
            --alter \
            --topic $TESTTOPIC \
            --config max.message.bytes=4096;
          echo "Configure, not the deprecated way:"
          # we can probably fix "Unable to load JDK7 types (annotations, java.nio.file.Path): no Java7 support added" using an entry in reflection.json, if we find any issue with not having those features:
          # https://github.com/FasterXML/jackson-databind/blob/jackson-databind-2.9.8/src/main/java/com/fasterxml/jackson/databind/ext/Java7Support.java#L24
          kafka-configs \
            --zookeeper $(ZOOKEEPER) \
            --entity-type=topics \
            --entity-name $TESTTOPIC \
            --alter \
            --add-config max.message.bytes=8192;
          echo "Describe:"
          kafka-topics \
            --bootstrap-server $(BOOTSTRAP) \
            --describe \
            --topic $TESTTOPIC
          echo "Delete:"
          kafka-topics \
            --bootstrap-server $(BOOTSTRAP) \
            --delete \
            --topic $TESTTOPIC
          echo "List:"
          kafka-topics \
            --bootstrap-server $(BOOTSTRAP) \
            --list
          echo "Consumer groups:"
          kafka-consumer-groups \
            --bootstrap-server $(BOOTSTRAP) \
            --group $TESTTOPIC-group \
            --topic $TESTTOPIC \
            --reset-offsets --execute \
            --to-offset 0
          kafka-consumer-groups \
            --bootstrap-server $(BOOTSTRAP) \
            --group $TESTTOPIC-group \
            --describe
          kafka-consumer-groups \
            --bootstrap-server $(BOOTSTRAP) \
            --group $TESTTOPIC-group \
            --delete
          echo "Test completed."
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
      restartPolicy: Never
